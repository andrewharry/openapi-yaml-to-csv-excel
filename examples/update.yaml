openapi: '3.0.0'
info:
  version: 1.0.0
  title: OpenAPI YAML to CSV/Excel converter sample
  license:
    name: MIT
servers:
  - url: http://localhost:8080/api
paths:
  /users:
    summary: User resources
    description: User resources description
    get:
      summary: List all users
      description: List all users description
      operationId: listUsers
      tags:
        - users
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of users
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a user
      description: Update a user description
      operationId: updateUser
      tags:
        - users
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}:
    summary: Users resources by id
    description: Users resources by id description
    get:
      summary: Info for a specific user
      description: Info for a specific user description
      operationId: getUserById
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users2/{userId}:
    summary: Users2 resources by id
    description: Users2 resources by id description
    get:
      summary: Info for a specific user2
      description: Info for a specific user2 description
      operationId: getUser2ById
      tags:
        - users2
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user2 to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Users:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/User'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
